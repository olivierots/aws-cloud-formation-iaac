#conditions are used to control the creation of reosurces based on a condition you defined, they can be whatever you want but most common ones are env, region or parameters value, each condition can also reference another condition
# the template creates a volume & mount point only if "prod" is specified as parameter and utilizes parameters, mappings, conditionals, outputs.

# below is a mapping which maps the regions to an ami and a test availability zone
AWSTemplateFormatVersion: "2010-09-09"
Mappings:
  RegionMap:
    us-east-1:
      AMI: "ami-a4c7edb2"
      TestAz: "us-east-1a"
    us-west-1:
      AMI: "ami-6df1e514"
      TestAz: "us-west-1a"
    us-west-2:
      AMI: "ami-327f5352"
      TestAz: "us-west-2a"
    eu-west-1:
      AMI: "ami-d7b9a2b1"
      TestAz: "eu-west-1a"
    sa-east-1:
      AMI: "ami-87dab1eb"
      TestAz: "sa-east-1a"
    ap-southeast-1:
      AMI: "ami-77af2014"
      TestAz: "ap-southeast-1a"
    ap-southeast-2:
      AMI: "ami-10918173"
      TestAz: "ap-southeast-2a"
    ap-northeast-1:
      AMI: "ami-e21cc38c"
      TestAz: "ap-northeast-1a"
      
# params is env type and the default is test and we restric the params to the only allowed values   
Parameters:
  EnvType:
    Description: Environment type.
    Default: test
    Type: String
    AllowedValues:
      - prod
      - test
    ConstraintDescription: must specify prod or test.

# to create the resources, you need to have a ref to the env type & only when prod is selected
# more functions that can be used (Fn::And, Fn::If , Fn::Not, Fn::Or)
Conditions:
  CreateProdResources: !Equals [ !Ref EnvType, prod ]

Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      InstanceType: t2.micro
      AvailabilityZone: !FindInMap [RegionMap, !Ref "AWS::Region", TestAz]

  MountPoint:
    Type: "AWS::EC2::VolumeAttachment"
    # create only when CreateProdResources is true
    Condition: CreateProdResources
    Properties:
      InstanceId:
        !Ref EC2Instance
      VolumeId:
        !Ref NewVolume
      Device: /dev/sdh

  NewVolume:
    Type: "AWS::EC2::Volume"
    # create only when CreateProdResources is true
    Condition: CreateProdResources
    Properties:
      Size: 100
      AvailabilityZone:
        # this will look at the reslut of the ec2 instance, AZ and use this value   
        # get any attribute that are attched to any resources that we create 
        !GetAtt EC2Instance.AvailabilityZone

Outputs:
  VolumeId:
    # create only when CreateProdResources is true
    Condition: CreateProdResources
    Value:
      !Ref NewVolume

